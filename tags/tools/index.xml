<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tools on /dump</title>
    <link>https://blog.danielcefram.com/tags/tools/</link>
    <description>Recent content in tools on /dump</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://danielcefram.com&#34;&gt;Daniel Cefram&lt;/a&gt; 2018</copyright>
    <lastBuildDate>Wed, 19 Dec 2018 09:12:14 +0800</lastBuildDate>
    
	<atom:link href="https://blog.danielcefram.com/tags/tools/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kahitsaan Random Restaurants</title>
      <link>https://blog.danielcefram.com/kahitsaan-random-restaurants/</link>
      <pubDate>Wed, 19 Dec 2018 09:12:14 +0800</pubDate>
      
      <guid>https://blog.danielcefram.com/kahitsaan-random-restaurants/</guid>
      <description>So I made a tool and I thought of blogging about it.
Background I recently left SplitmediaLabs, and now I&amp;rsquo;m working remotely as a Senior Software Developer/Engineer for a consultancy (aside: contract says that I&amp;rsquo;m a Senior Software Engineer, but my company ID states that I&amp;rsquo;m a Senior Software &amp;ldquo;Developer&amp;rdquo;. Minor stuff, it&amp;rsquo;s just that I hate inconsistencies).
Although I&amp;rsquo;m working remotely, I usually meetup with the team at a co-working space once a week&amp;hellip; And during those meetups, we always have a dilemma of picking a place to eat within the vicinity of the co-working space.</description>
    </item>
    
    <item>
      <title>Image Resizing in CLI</title>
      <link>https://blog.danielcefram.com/image-resizing-in-cli/</link>
      <pubDate>Tue, 18 Sep 2018 09:31:25 +0800</pubDate>
      
      <guid>https://blog.danielcefram.com/image-resizing-in-cli/</guid>
      <description>For the past few weeks, I was looking for a new compiled language that I can make use of for my tools as I grew tired of Go language&amp;rsquo;s verbosity. I tried learning Rust, but as I expected, it was more suited for system projects, and found out how much pain it could be for smaller tools due to how strict the compiler is.
With that, I eyed for both Nim and Crystal language, with the latter prevailing as my language of choice for my personal tools.</description>
    </item>
    
    <item>
      <title>Installing Sublime in OpenSUSE</title>
      <link>https://blog.danielcefram.com/installing-sublime-in-opensuse/</link>
      <pubDate>Sat, 16 Sep 2017 16:21:10 +0800</pubDate>
      
      <guid>https://blog.danielcefram.com/installing-sublime-in-opensuse/</guid>
      <description>My daily driver nowadays is Gogland , and I sometimes use VSCode if ever I need to open 2 or more projects at the same time (Gogland eats up way too much RAM).
In my previous post, I stated that I switched to VSCode away from Sublime, but since Gogland got better JS support, like configuring the root path so that it would match how my webpack config handles import paths, and with the fact that Gogland got better tooling when it came to coding in Go Language, I&amp;rsquo;m now using it as my primary editor.</description>
    </item>
    
    <item>
      <title>My notes in setting up Arch</title>
      <link>https://blog.danielcefram.com/my-notes-in-setting-up-arch/</link>
      <pubDate>Mon, 29 May 2017 06:26:05 +0000</pubDate>
      
      <guid>https://blog.danielcefram.com/my-notes-in-setting-up-arch/</guid>
      <description>I&amp;rsquo;m aware that there are many many articles on how to setup Arch Linux, with the official Wiki as the best one to check out first.
I just documented my experience on setting up Arch with the objective that I should be able replicate the same setup and environment on other Computers if needed.
Install Reflector This is so that we would use the fastest server in our mirrorlist</description>
    </item>
    
    <item>
      <title>When distro hopping...</title>
      <link>https://blog.danielcefram.com/when-distro-hopping.../</link>
      <pubDate>Mon, 24 Apr 2017 11:21:03 +0000</pubDate>
      
      <guid>https://blog.danielcefram.com/when-distro-hopping.../</guid>
      <description>So I&amp;rsquo;ve been distro hopping for the past couple of weeks, and I always googled how to format my boot drive and then write an ISO to my flash drive as bootable (boot-able, I&amp;rsquo;m getting a wrong spelling indicator with the &amp;ldquo;bootable&amp;rdquo; word XD) USB drive. Since I did that very frequently lately, I thought of just adding a blog post that would serve as my notes/reminder.
Formatting Boot-able USB You won&amp;rsquo;t be able to detect a boot-able flash drive in Linux (ie.</description>
    </item>
    
    <item>
      <title>Easily turn your app to Progressive Web Apps through webpack plugins</title>
      <link>https://blog.danielcefram.com/easily-turn-your-app-to-progressive-web-apps-through-webpack-plugins/</link>
      <pubDate>Sat, 18 Mar 2017 03:26:00 +0000</pubDate>
      
      <guid>https://blog.danielcefram.com/easily-turn-your-app-to-progressive-web-apps-through-webpack-plugins/</guid>
      <description>If ever we wanted our WebApp available even if the user does not have any internet connection, we would need to use service workers. But the thing with service workers is that they&amp;rsquo;re not &amp;ldquo;easy&amp;rdquo; to implement. It&amp;rsquo;s a good thing though that the GoogleChrome team released a node module that would generate the service worker code for your project: sw-precache.
You can use that node module in your gulp file when building/bundling your app.</description>
    </item>
    
  </channel>
</rss>