<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>node on /dump</title>
    <link>https://blog.danielcefram.com/tags/node/</link>
    <description>Recent content in node on /dump</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://danielcefram.com&#34;&gt;Daniel Cefram&lt;/a&gt; 2018</copyright>
    <lastBuildDate>Mon, 04 Mar 2019 14:10:06 +0800</lastBuildDate>
    
	<atom:link href="https://blog.danielcefram.com/tags/node/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Structuring a NodeJS CLI Tool</title>
      <link>https://blog.danielcefram.com/structuring-a-nodejs-cli-tool/</link>
      <pubDate>Mon, 04 Mar 2019 14:10:06 +0800</pubDate>
      
      <guid>https://blog.danielcefram.com/structuring-a-nodejs-cli-tool/</guid>
      <description>I just thought that I&amp;rsquo;d share what I did on an internal CLI tool that allows others to NOT modify any existing files in the NodeJS CLI Tool project.
The Problem We thought of creating a tool that would streamline our development workflow by automating some tidious, manual, and repetitive tasks.
The first order of the game is to list down the possible &amp;ldquo;commands&amp;rdquo; that this CLI tool would handle, and what those commands would do.</description>
    </item>
    
  </channel>
</rss>